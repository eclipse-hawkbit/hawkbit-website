<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eclipse hawkBit</title>
    <link>https://eclipse.dev/hawkbit/</link>
    <description>Recent content on Eclipse hawkBit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://eclipse.dev/hawkbit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is hawkBit?</title>
      <link>https://eclipse.dev/hawkbit/whatishawkbit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/whatishawkbit/</guid>
      <description>Eclipse hawkBit™ is a domain-independent back-end framework for rolling out software updates to constrained edge devices as well as more powerful controllers and gateways connected to IP based networking infrastructure.
Why Software Updates in IoT? Having software update capabilities ensures a secure IoT by means that it gives IoT projects a fighting chance against pandora&amp;rsquo;s box that they opened the moment their devices got connected. From that moment on devices are at the forefront of IT security threats many embedded software developers historically never had to face.</description>
    </item>
    <item>
      <title>Getting Started</title>
      <link>https://eclipse.dev/hawkbit/gettingstarted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/gettingstarted/</guid>
      <description>On Sandbox We offer a sandbox installation that is free for everyone to try out hawkBit&amp;rsquo;s Management UI, Management API, and Direct Device Integration API: https://hawkbit.eclipseprojects.io
The sandbox is a shared installation that will be reset from time to time. Therefore, it is not allowed to upload any personal data.
In addition, the following vendors offer free trial accounts for their Eclipse hawkBit compatible products:
Bosch IoT Rollouts (by Bosch Digital) Kynetics Update Factory (by Kynetics LLC) From Docker Image Overview Service / Container A B C hawkBit Update Server ✓ ✓ ✓ hawkBit Device Simulator ✓ MySQL ✓ ✓ RabbitMQ ✓ ✓ HawkBit Update Server uses username=admin and password=admin as default login credentials.</description>
    </item>
    <item>
      <title>Run hawkBit</title>
      <link>https://eclipse.dev/hawkbit/guides/runhawkbit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/guides/runhawkbit/</guid>
      <description>&lt;p&gt;In this guide we describe how to run a full featured hawkBit setup based on a production ready infrastructure. It is based on the hawkBit example modules and update server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Feign Client</title>
      <link>https://eclipse.dev/hawkbit/guides/feignclient/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/guides/feignclient/</guid>
      <description>&lt;p&gt;In this guide we describe how to create a &lt;a href=&#34;https://github.com/Netflix/feign&#34;&gt;Feign&lt;/a&gt; Rest Client based on a  &lt;a href=&#34;http://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; Application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clustering</title>
      <link>https://eclipse.dev/hawkbit/guides/clustering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/guides/clustering/</guid>
      <description>&lt;p&gt;hawkBit is able to run in a cluster with some constraints. This guide provides insights in the basic concepts and how to setup your own cluster. You can find additional information in the &lt;a href=&#34;https://github.com/eclipse/hawkbit/blob/master/hawkbit-runtime/hawkbit-update-server/README.md&#34;&gt;hawkBit runtimes&amp;rsquo;s README&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom Theme</title>
      <link>https://eclipse.dev/hawkbit/guides/customtheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/guides/customtheme/</guid>
      <description>&lt;p&gt;This guide provides details about using and creating themes that control the visual look of Eclipse hawkBit Management UI. Theme customization is done using Sass, which is an extension of CSS (Cascading Style Sheets).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Features</title>
      <link>https://eclipse.dev/hawkbit/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/features/</guid>
      <description>Device and Software Repository Repository that holds the provisioning targets and assignable software distributions. Targets to be logically grouped by Target Types. That includes a full software update history for every device. Support for pre-commission devices in the repository and plug and play, i.e. device is created if it is authenticated for the first time. Update Management Directly deploy a defined software distribution to a device (by Management UI or API).</description>
    </item>
    <item>
      <title>Authentication</title>
      <link>https://eclipse.dev/hawkbit/concepts/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/concepts/authentication/</guid>
      <description>&lt;p&gt;A hawkBit update server can be accessed in four different ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Direct Device Integration (DDI) API&lt;/em&gt; by &lt;strong&gt;targets&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Management API&lt;/em&gt; by 3rd party &lt;strong&gt;applications&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Device Management Federation (DMF) API&lt;/em&gt; by 3rd party &lt;strong&gt;applications&lt;/strong&gt; through AMQP.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Management UI&lt;/em&gt; by &lt;strong&gt;users&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Authorization</title>
      <link>https://eclipse.dev/hawkbit/concepts/authorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/concepts/authorization/</guid>
      <description>&lt;p&gt;Authorization is handled separately for &lt;em&gt;Direct Device Integration (DDI) API&lt;/em&gt; and &lt;em&gt;Device Management Federation (DMF) API&lt;/em&gt; (where successful authentication includes full authorization) and &lt;em&gt;Management API&lt;/em&gt; and &lt;em&gt;UI&lt;/em&gt; which is based on Spring security &lt;a href=&#34;https://github.com/eclipse/hawkbit/blob/master/hawkbit-security-core/src/main/java/org/eclipse/hawkbit/im/authentication/SpPermission.java&#34;&gt;authorities&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Model</title>
      <link>https://eclipse.dev/hawkbit/concepts/datamodel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/concepts/datamodel/</guid>
      <description>&lt;p&gt;The hawkBit data model was designed to have enough flexibility to define complex software structures (e.g. operating system, runtimes, apps, different kind of artifacts) on one side and simplicity compared to the capabilities of a full blown configuration management on the other.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rollout Management</title>
      <link>https://eclipse.dev/hawkbit/concepts/rollout-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/concepts/rollout-management/</guid>
      <description>&lt;p&gt;Software update operations in large scale IoT scenarios with hundreds of thousands of devices require special handling.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Target State Machine</title>
      <link>https://eclipse.dev/hawkbit/concepts/targetstate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/concepts/targetstate/</guid>
      <description>&lt;p&gt;A target has a current state which reflects the provisioning status of the device at this point in time. State changes are driven either by the update server by means of starting an update or by the controller on the provisioning target that gives feedback to the update server, e.g. &amp;ldquo;I am here&amp;rdquo;, &amp;ldquo;I am working on a provisioning&amp;rdquo;, &amp;ldquo;I have finished a provisioning&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture</title>
      <link>https://eclipse.dev/hawkbit/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/architecture/</guid>
      <description>Overview of hawkBit modules and used 3rd party technology: </description>
    </item>
    <item>
      <title>Management UI</title>
      <link>https://eclipse.dev/hawkbit/ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/ui/</guid>
      <description>The hawkBit Management UI provides several views for the different use cases:
Deployment Management view for target administration and manual deployment. Distribution Management view software repository metadata management. Artifact Management view to manage the artifacts. Target Filter Management view to manage target filters that can be used both in Deployment and Rollout Management views. Rollout Management for large scale rollout orchestration. Deployment Management Purpose Target status overview, target management and manual deployments.</description>
    </item>
    <item>
      <title>Management API</title>
      <link>https://eclipse.dev/hawkbit/apis/management_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/apis/management_api/</guid>
      <description>&lt;p&gt;The Management API is a RESTful API that enables to perform Create/Read/Update/Delete operations for provisioning targets (i.e. devices) and repository content (i.e. software).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Direct Device Integration API</title>
      <link>https://eclipse.dev/hawkbit/apis/ddi_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/apis/ddi_api/</guid>
      <description>&lt;p&gt;The hawkBit &lt;a href=&#34;https://github.com/eclipse/hawkbit&#34;&gt;update server&lt;/a&gt; provides REST resources which are consumed by the device to retrieve software update tasks.
This API is based on HTTP standards and a polling mechanism.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Device Management Federation API</title>
      <link>https://eclipse.dev/hawkbit/apis/dmf_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/apis/dmf_api/</guid>
      <description>&lt;p&gt;The DMF API provides Java classes which allows that the message body can be deserialized at runtime into a Java object. Also Java classes can be used to serialize Java objects into JSON bodies to send a message to hawkBit.
Currently, bodies of messages are based on JSON.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Community</title>
      <link>https://eclipse.dev/hawkbit/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/community/</guid>
      <description>Presentations Here you can find links to arbitrary material covering Eclipse hawkBit which has been presented at events, conferences and meet-ups.
09/23/2015 - Eclipse IoT Working Group meeting - slides 04/11/2015 - EclipseCon Europe 2015 - slides 03/09/2016 - EclipseCon North America 2016 - slides 05/16/2016 - Eclipse Virtual IoT Meetup - video - slides 03/20/2017 - Eclipse IoT Day SanJose, CA - video - slides 09/12/2017 - Eclipse IoT Day ThingMonk 2017 - video 01/10/2018 - Eclipse Virtual IoT Meetup - video - slides 10/22/2018 - Community Day EclipseCon Europe 2018 - slides 10/21/2019 - Community Day EclipseCon Europe 2019 - slides 10/19/2020 - Community Day EclipseCon Europe 2020 - slides Articles 10/27/2015 - Why software provisioning goes open source - article 05/25/2016 - jaxenter: Eclipse hawkBit - english - german 09/27/2016 - Eclipse Newsletter - &amp;lsquo;IoT is the new black&amp;rsquo; - article Ask a question Visit stackoverflow.</description>
    </item>
    <item>
      <title>Vaadin 8 UI discontinuation</title>
      <link>https://eclipse.dev/hawkbit/blog/2023-10-22-vaadin8_ui_discontinuation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/blog/2023-10-22-vaadin8_ui_discontinuation/</guid>
      <description>In this article, we want to give an overview of the future of the hawkBit UI
hawkBit Vaadin 8 UI discontinuation The hawkBit UI uses Vaadin as a web UI framework. It uses Vaadin 8 (8.14.3). This major version, according Vaadin Roadmap, has no free support since 21st Feb 2022. There are some version releases after that date (8.15.0 - 8.16.0) that are Apache 2.0 licensed. However, since 8.16.1 (see here) the license is Commercial Vaadin Developer License 4.</description>
    </item>
    <item>
      <title>Eclipse hawkBit upgrade to Eclipse Public License - v 2.0</title>
      <link>https://eclipse.dev/hawkbit/blog/2023-09-21-epl2.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/blog/2023-09-21-epl2.0/</guid>
      <description>hawkBit is a domain-independent back-end framework for rolling out software updates to constrained edge devices as well as more powerful controllers and gateways connected to IP based networking infrastructure. It is part of the Eclipse IoT since 2015.
In this article, we want to give an overview of the latest highlights of hawkBit license changes.
hawkBit license upgraded to Eclipse Public License - v 2.0 Based on the issues Switch to EPL 2.</description>
    </item>
    <item>
      <title>Release notes</title>
      <link>https://eclipse.dev/hawkbit/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/release-notes/</guid>
      <description>0.3.0 Release Date: Friday, November 17, 2023 Hawkbit: Tag / Release Extensions: Tag
0.3.0M9 Release Date: Thursday, August 24, 2023 Hawkbit: Tag / Release Extensions: Tag
0.3.0M8 Release Date: Friday, April 21, 2023 Hawkbit: Tag / Release Extensions: Tag / Release
0.3.0M7 Release Date: Monday, February 15, 2021 Hawkbit: Tag / Release Extensions: Tag / Release
0.3.0M6 Release Date: Friday, January 17, 2020 Tag / Release
0.3.0M5 Release Date: Tuesday, July 29, 2019 Tag / Release</description>
    </item>
    <item>
      <title>Eclipse hawkBit 0.2.0 - First Release</title>
      <link>https://eclipse.dev/hawkbit/blog/2018-07-26-first-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/blog/2018-07-26-first-release/</guid>
      <description>hawkBit is a domain-independent back-end framework for rolling out software updates to constrained edge devices as well as more powerful controllers and gateways connected to IP based networking infrastructure. It is part of the Eclipse IoT since 2015 and with version 0.2.0 a first release is available.
In this article, we want to give an overview of the latest highlights of hawkBit and let you know how you can get started in seconds.</description>
    </item>
    <item>
      <title>Sandbox</title>
      <link>https://eclipse.dev/hawkbit/sandbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://eclipse.dev/hawkbit/sandbox/</guid>
      <description></description>
    </item>
  </channel>
</rss>
