{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "hawkBit REST APIs",
    "description" : "Eclipse hawkBitâ„¢ is a domain-independent back-end framework for rolling out software updates to constrained edge devices as well as more powerful controllers and gateways connected to IP based networking infrastructure.\n",
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "http://localhost:49696",
    "description" : "Generated server url"
  } ],
  "tags" : [ {
    "name" : "Distribution Sets",
    "description" : "REST Resource handling for DistributionSet CRUD operations."
  }, {
    "name" : "Targets",
    "description" : "REST API for Target CRUD operations."
  }, {
    "name" : "Actions",
    "description" : "REST API providing (read-only) access to actions."
  }, {
    "name" : "Basic Authentication",
    "description" : "API for basic auth user validation."
  }, {
    "name" : "Download artifact by ID",
    "description" : "API to download artifacts by download Id."
  }, {
    "name" : "Software Module Types",
    "description" : "REST API for SoftwareModuleTypes CRUD operations."
  }, {
    "name" : "Rollouts",
    "description" : "REST API for Rollout CRUD operations."
  }, {
    "name" : "Target Types",
    "description" : "REST API for Target Type CRUD operations."
  }, {
    "name" : "Software Modules",
    "description" : "REST API for SoftwareModule and related Artifact CRUD operations."
  }, {
    "name" : "Target Tags",
    "description" : "REST API for Target Tag CRUD operations."
  }, {
    "name" : "Target Filter Queries",
    "description" : "REST API for Target Filter Queries CRUD operations."
  }, {
    "name" : "Download artifact",
    "description" : "API to download artifacts."
  }, {
    "name" : "Distribution Set Tags",
    "description" : "REST Resource handling for DistributionSetTag CRUD operations."
  }, {
    "name" : "Distribution Set Types",
    "description" : "REST Resource handling for DistributionSetType CRUD operations."
  }, {
    "name" : "System Configuration",
    "description" : "REST API for handling tenant specific configuration operations."
  } ],
  "paths" : {
    "/rest/v1/targettypes/{targetTypeId}" : {
      "get" : {
        "tags" : [ "Target Types" ],
        "summary" : "Return target type by id",
        "description" : "Handles the GET request of retrieving a single target type",
        "operationId" : "getTargetType",
        "parameters" : [ {
          "name" : "targetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Target type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetType"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Target Types" ],
        "summary" : "Update target type by id",
        "description" : "Handles the PUT request for a single target type. Required Permission: UPDATE_TARGET",
        "operationId" : "updateTargetType",
        "parameters" : [ {
          "name" : "targetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetTypeRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetTypeRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Target type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Target Types" ],
        "summary" : "Delete target type by id",
        "description" : "Handles the DELETE request for a single target type. Required Permission: DELETE_TARGET",
        "operationId" : "deleteTargetType",
        "parameters" : [ {
          "name" : "targetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Target type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targettags/{targetTagId}" : {
      "get" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Return target tag by id",
        "description" : "Handles the GET request of retrieving a single target tag.",
        "operationId" : "getTargetTag",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "404" : {
            "description" : "Target tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Update target tag by id",
        "description" : "Handles the PUT request of updating a target tag.",
        "operationId" : "updateTargetTag",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "404" : {
            "description" : "Target tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Delete target tag by id",
        "description" : "Handles the DELETE request of deleting a single target tag.",
        "operationId" : "deleteTargetTag",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies."
          },
          "404" : {
            "description" : "Target tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second."
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication."
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json."
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource."
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return target by id",
        "description" : "Handles the GET request of retrieving a single target. Required Permission: READ_TARGET.",
        "operationId" : "getTarget",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTarget"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Targets" ],
        "summary" : "Update target by id",
        "description" : "Handles the PUT request of updating a target. Required Permission: UPDATE_TARGET",
        "operationId" : "updateTarget",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetRequestBody"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTarget"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Targets" ],
        "summary" : "Delete target by id",
        "description" : "Handles the DELETE request of deleting a single target. Required Permission: DELETE_TARGET",
        "operationId" : "deleteTarget",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/metadata/{metadataKey}" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return single metadata value for a specific key of a target",
        "description" : "Get a single meta data value for a meta data key. Required permission: READ_REPOSITORY",
        "operationId" : "getMetadataValue",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Targets" ],
        "summary" : "Updates a single meta data value of a target",
        "description" : "Update a single meta data value for speficic key. Required permission: UPDATE_REPOSITORY",
        "operationId" : "updateMetadata",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtMetadataBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Targets" ],
        "summary" : "Deletes a single meta data entry from a target",
        "description" : "Delete a single meta data. Required permission: UPDATE_REPOSITORY",
        "operationId" : "deleteMetadata",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/actions/{actionId}" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return action by id of a specific target",
        "description" : "Handles the GET request of retrieving a specific action on a specific target. Required Permission: READ_TARGET",
        "operationId" : "getAction",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtAction"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtAction"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Targets" ],
        "summary" : "Switch an action from soft to forced",
        "description" : "Handles the PUT request to switch an action from soft to forced. Required Permission: UPDATE_TARGET.",
        "operationId" : "updateAction",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtActionRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtActionRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtAction"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtAction"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Targets" ],
        "summary" : "Cancel action for a specific target",
        "description" : "Cancels an active action, only active actions can be deleted. Required Permission: UPDATE_TARGET",
        "operationId" : "cancelAction",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targetfilters/{filterId}" : {
      "get" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Return target filter query by id",
        "description" : "Handles the GET request of retrieving a single target filter query. Required permission: READ_TARGET",
        "operationId" : "getFilter",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              }
            }
          },
          "404" : {
            "description" : "Target filter query not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Updates target filter query by id",
        "description" : "Handles the PUT request of updating a target filter query. Required permission: UPDATE_TARGET",
        "operationId" : "updateFilter",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetFilterQueryRequestBody"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetFilterQueryRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              }
            }
          },
          "404" : {
            "description" : "Target filter query not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Delete target filter by id",
        "description" : "Handles the DELETE request of deleting a target filter query. Required permission: DELETE_TARGET",
        "operationId" : "deleteFilter",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Target filter query not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/system/configs" : {
      "get" : {
        "tags" : [ "System Configuration" ],
        "summary" : "Return all tenant specific configuration values",
        "description" : "The GET request returns a list of all possible configuration keys for the tenant. Required Permission: TENANT_CONFIGURATION",
        "operationId" : "getTenantConfiguration",
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "System Configuration" ],
        "summary" : "Batch update of tenant configuration.",
        "description" : "The PUT request updates the whole configuration for the tenant. Required Permission: TENANT_CONFIGURATION",
        "operationId" : "updateTenantConfiguration",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/system/configs/{keyName}" : {
      "get" : {
        "tags" : [ "System Configuration" ],
        "summary" : "Return a tenant specific configuration value",
        "description" : "The GET request returns the configuration value of a specific configuration key for the tenant. Required Permission: TENANT_CONFIGURATION",
        "operationId" : "getTenantConfigurationValue",
        "parameters" : [ {
          "name" : "keyName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                }
              }
            }
          },
          "404" : {
            "description" : "Configuration key not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "System Configuration" ],
        "summary" : "Update a tenant specific configuration value.",
        "description" : "The PUT request changes a configuration value of a specific configuration key for the tenant. Required Permission: TENANT_CONFIGURATION",
        "operationId" : "updateTenantConfigurationValue",
        "parameters" : [ {
          "name" : "keyName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValueRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValueRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSystemTenantConfigurationValue"
                }
              }
            }
          },
          "404" : {
            "description" : "Configuration key not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "System Configuration" ],
        "summary" : "Delete a tenant specific configuration value",
        "description" : "The DELETE request removes a tenant specific configuration value for the tenant. Afterwards the global default value is used. Required Permission: TENANT_CONFIGURATION",
        "operationId" : "deleteTenantConfigurationValue",
        "parameters" : [ {
          "name" : "keyName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/softwaremoduletypes/{softwareModuleTypeId}" : {
      "get" : {
        "tags" : [ "Software Module Types" ],
        "summary" : "Return single Software Module Type",
        "description" : "Handles the GET request of retrieving a single software module type. Required Permission: READ_REPOSITORY",
        "operationId" : "getSoftwareModuleType",
        "parameters" : [ {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Software Module Types" ],
        "summary" : "Update Software Module Type",
        "description" : "Handles the PUT request for a single software module type. Required Permission: UPDATE_REPOSITORY",
        "operationId" : "updateSoftwareModuleType",
        "parameters" : [ {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSoftwareModuleTypeRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSoftwareModuleTypeRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Software Module Types" ],
        "summary" : "Delete Software Module Type by Id",
        "description" : "Handles the DELETE request for a single software module type. Required Permission: DELETE_REPOSITORY",
        "operationId" : "deleteSoftwareModuleType",
        "parameters" : [ {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/softwaremodules/{softwareModuleId}" : {
      "get" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Return Software Module by id",
        "description" : "Handles the GET request of retrieving a single softwaremodule. Required Permission: READ_REPOSITORY",
        "operationId" : "getSoftwareModule",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Software Module not found ",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModule"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModule"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Update Software Module",
        "description" : "Handles the PUT request for a single softwaremodule within Hawkbit. Required Permission: UPDATE_REPOSITORY",
        "operationId" : "updateSoftwareModule",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSoftwareModuleRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSoftwareModuleRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModule"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModule"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Delete Software Module by Id",
        "description" : "Handles the DELETE request for a single softwaremodule within Hawkbit. Required Permission: DELETE_REPOSITORY",
        "operationId" : "deleteSoftwareModule",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/softwaremodules/{softwareModuleId}/metadata/{metadataKey}" : {
      "get" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Return single meta data value for a specific key of a Software Module",
        "description" : "Get a single meta data value for a meta data key. Required Permission: READ_REPOSITORY",
        "operationId" : "getMetadataValue_1",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Software Module not found ",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Update a single meta data value of a Software Module",
        "description" : "Update a single meta data value for speficic key. Required Permission: UPDATE_REPOSITORY",
        "operationId" : "updateMetadata_1",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadataBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Delete single meta data entry from the software module",
        "description" : "Delete a single meta data. Required Permission: UPDATE_REPOSITORY",
        "operationId" : "deleteMetadata_1",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsettypes/{distributionSetTypeId}" : {
      "get" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Return single Distribution Set Type",
        "description" : "Handles the GET request of retrieving a single distribution set type. Required Permission: READ_REPOSITORY",
        "operationId" : "getDistributionSetType",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetType"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Update Distribution Set Type",
        "description" : "Handles the PUT request for a single distribution set type. Required Permission: UPDATE_REPOSITORY",
        "operationId" : "updateDistributionSetType",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetTypeRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetTypeRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Delete Distribution Set Type by Id",
        "description" : "Handles the DELETE request for a single distribution set type. Required Permission: DELETE_REPOSITORY",
        "operationId" : "deleteDistributionSetType",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsettags/{distributionsetTagId}" : {
      "get" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Return single Distribution Set Tag",
        "description" : "Handles the GET request of retrieving a single distribution set tag.",
        "operationId" : "getDistributionSetTag",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Update Distribution Set Tag",
        "description" : "Handles the PUT request of updating a distribution set tag.",
        "operationId" : "updateDistributionSetTag",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTag"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Delete a single distribution set tag",
        "description" : "Handles the DELETE request of deleting a single distribution set tag.",
        "operationId" : "deleteDistributionSetTag",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return single Distribution Set",
        "description" : "Handles the GET request of retrieving a single distribution set. Required permission: READ_REPOSITORY",
        "operationId" : "getDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Update Distribution Set",
        "description" : "Handles the UPDATE request for a single Distribution Set. Required permission: UPDATE_REPOSITORY",
        "operationId" : "updateDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetRequestBodyPut"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetRequestBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              },
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Delete Distribution Set by Id",
        "description" : "Handles the DELETE request for a single Distribution Set. Required permission: DELETE_REPOSITORY",
        "operationId" : "deleteDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/metadata/{metadataKey}" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return single meta data value for a specific key of a Distribution Set",
        "description" : "Get a single meta data value for a meta data key. Required permission: READ_REPOSITORY",
        "operationId" : "getMetadataValue_2",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Update single meta data value of a distribution set",
        "description" : "Update a single meta data value for speficic key. Required permission: UPDATE_REPOSITORY",
        "operationId" : "updateMetadata_2",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtMetadataBodyPut"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Delete a single meta data entry from the distribution set",
        "description" : "Delete a single meta data. Required permission: UPDATE_REPOSITORY",
        "operationId" : "deleteMetadata_2",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metadataKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/targettypes" : {
      "get" : {
        "tags" : [ "Target Types" ],
        "summary" : "Return all target types",
        "description" : "Handles the GET request of retrieving all target types.",
        "operationId" : "getTargetTypes",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTargetType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTargetType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Target Types" ],
        "summary" : "Create target types",
        "description" : "Handles the POST request for creating new target types. The request body must always be a list of types. Required Permission: CREATE_TARGET",
        "operationId" : "createTargetTypes",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTargetTypeRequestBodyPost"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTargetTypeRequestBodyPost"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Target type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTargetType"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTargetType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targettypes/{targetTypeId}/compatibledistributionsettypes" : {
      "get" : {
        "tags" : [ "Target Types" ],
        "summary" : "Return list of compatible distribution set types",
        "description" : "Handles the GET request of retrieving the list of compatible distribution set types in that target type. Required Permission: READ_TARGET, READ_REPOSITORY",
        "operationId" : "getCompatibleDistributionSets",
        "parameters" : [ {
          "name" : "targetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution set type was not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSetType"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSetType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Target Types" ],
        "summary" : "Adding compatibility of a distribution set type to a target type",
        "description" : "Handles the POST request for adding compatible distribution set types to a target type. Required Permission: UPDATE_TARGET and READ_REPOSITORY",
        "operationId" : "addCompatibleDistributionSets",
        "parameters" : [ {
          "name" : "targetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetTypeAssignment"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetTypeAssignment"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution set type was not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targettags" : {
      "get" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Return all target tags",
        "description" : "Handles the GET request of retrieving all target tags.",
        "operationId" : "getTargetTags",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Create target tag(s)",
        "description" : "Handles the POST request of creating new target tag. The request body must always be a list of target tags.",
        "operationId" : "createTargetTags",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targettags/{targetTagId}/assigned" : {
      "get" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Return assigned targets for tag",
        "description" : "Handles the GET request of retrieving a list of assigned targets.",
        "operationId" : "getAssignedTargets",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Target tag not found",
            "content" : {
              "application/json" : { }
            }
          },
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Assign target(s) to given tagId",
        "description" : "Handles the POST request of target assignment. Already assigned target will be ignored.",
        "operationId" : "assignTargets",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedTargetRequestBody"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedTargetRequestBody"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targettags/{targetTagId}/assigned/toggleTagAssignment" : {
      "post" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Toggles target tag assignment",
        "description" : "Handles the POST request of toggle target assignment. The request body must always be a list of controller ids.",
        "operationId" : "toggleTagAssignment",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedTargetRequestBody"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedTargetRequestBody"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetTagAssigmentResult"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return all targets",
        "description" : "Handles the GET request of retrieving all targets. Required permission: READ_TARGET",
        "operationId" : "getTargets",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Targets" ],
        "summary" : "Create target(s)",
        "description" : "Handles the POST request of creating new targets. The request body must always be a list of targets. Required Permission: CREATE_TARGET",
        "operationId" : "createTargets",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTargetRequestBody"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTargetRequestBody"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTarget"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/targettype" : {
      "post" : {
        "tags" : [ "Targets" ],
        "summary" : "Assign target type to a target",
        "description" : "Assign or update the target type of a target. Required permission: UPDATE_TARGET",
        "operationId" : "assignTargetType",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtId"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      },
      "delete" : {
        "tags" : [ "Targets" ],
        "summary" : "Unassign target type from target.",
        "description" : "Remove the target type from a target. The target type will be set to null. Required permission: UPDATE_TARGET",
        "operationId" : "unassignTargetType",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/metadata" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return metadata for specific target",
        "description" : "Get a paged list of meta data for a target. Required permission: READ_REPOSITORY",
        "operationId" : "getMetadata",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtMetadata"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Targets" ],
        "summary" : "Create a list of meta data for a specific target",
        "description" : "Create a list of meta data entries Required permissions: READ_REPOSITORY and UPDATE_TARGET",
        "operationId" : "createMetadata",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            },
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtMetadata"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtMetadata"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/autoConfirm/deactivate" : {
      "post" : {
        "tags" : [ "Targets" ],
        "summary" : "Deactivate auto-confirm on a specific target",
        "description" : "Handles the POST request to deactivate auto-confirmation for a specific target. All active actions will remain unchanged while all future actions need to be confirmed, before processing with the deployment. Required Permission: UPDATE_TARGET",
        "operationId" : "deactivateAutoConfirm",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/autoConfirm/activate" : {
      "post" : {
        "tags" : [ "Targets" ],
        "summary" : "Activate auto-confirm on a specific target",
        "description" : "Handles the POST request to activate auto-confirmation for a specific target. As a result all current active as well as future actions will automatically be confirmed by mentioning the initiator as triggered person. Actions will be automatically confirmed, as long as auto-confirmation is active. Required Permission: UPDATE_TARGET",
        "operationId" : "activateAutoConfirm",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetAutoConfirmUpdate"
              }
            }
          }
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/assignedDS" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return the assigned distribution set of a specific target",
        "description" : "Handles the GET request of retrieving the assigned distribution set of an specific target. Required Permission: READ_TARGET",
        "operationId" : "getAssignedDistributionSet",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Targets" ],
        "summary" : "Assigns a distribution set to a specific target",
        "description" : "Handles the POST request for assigning a distribution set to a specific target. Required Permission: READ_REPOSITORY and UPDATE_TARGET",
        "operationId" : "postAssignedDistributionSet",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offline",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetAssignments"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetAssignments"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAssignmentResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAssignmentResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targetfilters" : {
      "get" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Return all target filter queries",
        "description" : "Handles the GET request of retrieving all target filter queries. Required permission: READ_TARGET",
        "operationId" : "getFilters",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "representation",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "compact"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTargetFilterQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTargetFilterQuery"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Create target filter",
        "description" : "Handles the POST request to create a new target filter query. Required permission: CREATE_TARGET",
        "operationId" : "createFilter",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetFilterQueryRequestBody"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtTargetFilterQueryRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targetfilters/{filterId}/autoAssignDS" : {
      "get" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Return distribution set for auto assignment of a specific target filter",
        "description" : "Handles the GET request of retrieving the auto assign distribution set. Required permission: READ_TARGET",
        "operationId" : "getAssignedDistributionSet_1",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Set auto assignment of distribution set for a target filter query",
        "description" : "Handles the POST request of setting the auto assign distribution set for a target filter query. Required permissions: UPDATE_TARGET and READ_REPOSITORY",
        "operationId" : "postAssignedDistributionSet_1",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetAutoAssignment"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtDistributionSetAutoAssignment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target filter not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Target Filter Queries" ],
        "summary" : "Remove Distribution Set for auto assignment of a target filter",
        "description" : "Removes the auto assign distribution set from the target filter query. Required permission: UPDATE_TARGET",
        "operationId" : "deleteAssignedDistributionSet",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Target filter query not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/softwaremoduletypes" : {
      "get" : {
        "tags" : [ "Software Module Types" ],
        "summary" : "Return all Software Module Types",
        "description" : "Handles the GET request of retrieving all software module types. Required Permission: READ_REPOSITORY",
        "operationId" : "getTypes",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModuleType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModuleType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Software Module Types" ],
        "summary" : "Creates new Software Module Types",
        "description" : "Handles the POST request of creating new software module types. The request body must always be a list of module types. Required Permission: CREATE_REPOSITORY",
        "operationId" : "createSoftwareModuleTypes",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleTypeRequestBodyPost"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleTypeRequestBodyPost"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/softwaremodules" : {
      "get" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Return all Software modules",
        "description" : "Handles the GET request of retrieving all softwaremodules. Required Permission: READ_REPOSITORY",
        "operationId" : "getSoftwareModules",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModule"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModule"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Create Software Module(s)",
        "description" : "Handles the POST request of creating new software modules. The request body must always be a list of modules. Required Permission: CREATE_REPOSITORY",
        "operationId" : "createSoftwareModules",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleRequestBodyPost"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleRequestBodyPost"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModule"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModule"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/softwaremodules/{softwareModuleId}/metadata" : {
      "get" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Return meta data for a Software Module",
        "description" : "Get a paged list of meta data for a software module. Required Permission: READ_REPOSITORY",
        "operationId" : "getMetadata_1",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Software Module not found ",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModuleMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModuleMetadata"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Creates a list of meta data for a specific Software Module",
        "description" : "Create a list of meta data entries Required Permission: UPDATE_REPOSITORY",
        "operationId" : "createMetadata_1",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                }
              }
            },
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/softwaremodules/{softwareModuleId}/artifacts" : {
      "get" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Return all meta data of artifacts assigned to a software module",
        "description" : "Handles the GET request of retrieving all meta data of artifacts assigned to a software module. Required Permission: READ_REPOSITORY",
        "operationId" : "getArtifacts",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "representation",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "compact"
          }
        }, {
          "name" : "useartifacturlhandler",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Software Module not found ",
            "content" : {
              "application/json" : { }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtArtifact"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtArtifact"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Upload artifact",
        "description" : "Handles POST request for artifact upload. Required Permission: CREATE_REPOSITORY",
        "operationId" : "uploadArtifact",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "filename",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "md5sum",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sha1sum",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sha256sum",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtArtifact"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtArtifact"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/rollouts" : {
      "get" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Return all Rollouts",
        "description" : "Handles the GET request of retrieving all rollouts. Required Permission: READ_ROLLOUT",
        "operationId" : "getRollouts",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "representation",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "compact"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtRolloutResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtRolloutResponseBody"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Create a new Rollout",
        "description" : "Handles the POST request of creating new rollout. Required Permission: CREATE_ROLLOUT",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtRolloutRestRequestBody"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtRolloutRestRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/triggerNextGroup" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Force trigger processing next group of a Rollout",
        "description" : "Handles the POST request of triggering the next group of a rollout. Required Permission: UPDATE_ROLLOUT",
        "operationId" : "triggerNextGroup",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/start" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Start a Rollout",
        "description" : "Handles the POST request of starting a created rollout. Required Permission: HANDLE_ROLLOUT",
        "operationId" : "start",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/retry" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Retry a rollout",
        "description" : "Handles the POST request of retrying a rollout. Required Permission: CREATE_ROLLOUT",
        "operationId" : "retryRollout",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Rollout not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/resume" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Resume a Rollout",
        "description" : "Handles the POST request of resuming a paused rollout. Required Permission: HANDLE_ROLLOUT",
        "operationId" : "resume",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/pause" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Pause a Rollout",
        "description" : "Handles the POST request of pausing a running rollout. Required Permission: HANDLE_ROLLOUT",
        "operationId" : "pause",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/deny" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Deny a Rollout",
        "description" : "Handles the POST request of denying a created rollout. Only possible if approval workflow is enabled in system configuration and rollout is in state WAITING_FOR_APPROVAL. Required Permission: APPROVE_ROLLOUT",
        "operationId" : "deny",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "remark",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/approve" : {
      "post" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Approve a Rollout",
        "description" : "Handles the POST request of approving a created rollout. Only possible if approval workflow is enabled in system configuration and rollout is in state WAITING_FOR_APPROVAL. Required Permission: APPROVE_ROLLOUT",
        "operationId" : "approve",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "remark",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsettypes" : {
      "get" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Return all Distribution Set Types",
        "description" : "Handles the GET request of retrieving all distribution set types. Required Permission: READ_REPOSITORY",
        "operationId" : "getDistributionSetTypes",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtDistributionSetType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtDistributionSetType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Create new distribution set types",
        "description" : "Handles the POST request for creating new distribution set types. The request body must always be a list of types. Required Permission: CREATE_REPOSITORY",
        "operationId" : "createDistributionSetTypes",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetTypeRequestBodyPost"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetTypeRequestBodyPost"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSetType"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSetType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsettypes/{distributionSetTypeId}/optionalmoduletypes" : {
      "get" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Return optional Software Module Types in a Distribution Set Type",
        "description" : "Handles the GET request of retrieving the list of optional software module types in that distribution set type. Required Permission: READ_REPOSITORY",
        "operationId" : "getOptionalModules",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Add optional Software Module Type to a Distribution Set Type",
        "description" : "Handles the POST request for adding an optional software module type to a distribution set type.Note that a DS type cannot be changed after it has been used by a DS. Required Permission: UPDATE_REPOSITORY and READ_REPOSITORY",
        "operationId" : "addOptionalModule",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtId"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsettypes/{distributionSetTypeId}/mandatorymoduletypes" : {
      "get" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Return mandatory Software Module Types in a Distribution Set Type",
        "description" : "Handles the GET request of retrieving the list of mandatory software module types in that distribution set type. Required Permission: READ_REPOSITORY",
        "operationId" : "getMandatoryModules",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Add mandatory Software Module Type to a Distribution Set Type",
        "description" : "Handles the POST request for adding a mandatory software module type to a distribution set type.Note that a DS type cannot be changed after it has been used by a DS. Required Permission: UPDATE_REPOSITORY and READ_REPOSITORY",
        "operationId" : "addMandatoryModule",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtId"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsettags" : {
      "get" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Return all Distribution Set Tags",
        "description" : "Handles the GET request of retrieving all distribution set tags.",
        "operationId" : "getDistributionSetTags",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTag"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Creates new Distribution Set Tags",
        "description" : "Handles the POST request of creating new distribution set tag. The request body must always be a list of distribution set tags.",
        "operationId" : "createDistributionSetTags",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTagRequestBodyPut"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtTag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsettags/{distributionsetTagId}/assigned" : {
      "get" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Return all assigned distribution sets by given tag Id",
        "description" : "Handles the GET request of retrieving a list of assigned distributions.",
        "operationId" : "getAssignedDistributionSets",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Tag not found",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtDistributionSet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtDistributionSet"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Assign distribution sets to the given tag id",
        "description" : "Handles the POST request of distribution assignment. Already assigned distribution will be ignored.",
        "operationId" : "assignDistributionSets",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedDistributionSetRequestBody"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedDistributionSetRequestBody"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSet"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsettags/{distributionsetTagId}/assigned/toggleTagAssignment" : {
      "post" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Toggle the assignment of distribution sets by the given tag id",
        "description" : "Handles the POST request of toggle distribution assignment. The request body must always be a list of distribution set ids.",
        "operationId" : "toggleTagAssignment_1",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtAssignedDistributionSetRequestBody"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetTagAssigmentResult"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return all Distribution Sets",
        "description" : "Handles the GET request of retrieving all distribution sets. Required permission: READ_REPOSITORY",
        "operationId" : "getDistributionSets",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtDistributionSet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtDistributionSet"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Creates new Distribution Sets",
        "description" : "Handles the POST request of creating new distribution sets within Hawkbit. The request body must always be a list of sets. Required permission: CREATE_REPOSITORY",
        "operationId" : "createDistributionSets",
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetRequestBodyPost"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetRequestBodyPost"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSet"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtDistributionSet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/metadata" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return meta data for Distribution Set",
        "description" : "Get a paged list of meta data for a distribution set. Required permission: READ_REPOSITORY",
        "operationId" : "getMetadata_2",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtMetadata"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtMetadata"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Create a list of meta data for a specific distribution set",
        "description" : "Create a list of meta data entries Required permissions: READ_REPOSITORY and UPDATE_TARGET",
        "operationId" : "createMetadata_2",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            },
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtMetadata"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtMetadata"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MgmtMetadata"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/invalidate" : {
      "post" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Invalidate a distribution set",
        "description" : "Invalidate a distribution set. Once a distribution set is invalidated, it can not be valid again. An invalidated distribution set cannot be assigned to targets anymore. The distribution set that is going to be invalidated will be removed from all auto assignments. Furthermore, the user can choose to cancel all rollouts and (force) cancel all actions connected to this distribution set. Required permission: UPDATE_REPOSITORY, UPDATE_TARGET",
        "operationId" : "invalidateDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtInvalidateDistributionSetRequestBody"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MgmtInvalidateDistributionSetRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set not found",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/assignedTargets" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return assigned targets to a specific distribution set",
        "description" : "Handles the GET request for retrieving assigned targets of a single distribution set. Required permissions: READ_REPOSITORY and READ_TARGET",
        "operationId" : "getAssignedTargets_1",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Assigning multiple targets to a single distribution set",
        "description" : "Handles the POST request for assigning multiple targets to a distribution set.The request body must always be a list of target IDs. Non-existing targets are silently ignored resulting in a valid response. Required permissions: READ_REPOSITORY and UPDATE_TARGET",
        "operationId" : "createAssignedTarget",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offline",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTargetAssignmentRequestBody"
                }
              }
            },
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtTargetAssignmentRequestBody"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAssignmentResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAssignmentResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/assignedSM" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return the assigned software modules of a specific distribution set",
        "description" : "Handles the GET request of retrieving a single distribution set. Required permission: READ_REPOSITORY",
        "operationId" : "getAssignedSoftwareModules",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModule"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtSoftwareModule"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Assign a list of software modules to a distribution set",
        "description" : "Handles the POST request for assigning multiple software modules to a distribution set.The request body must always be a list of software module IDs. Required permissions: READ_REPOSITORY and UPDATE_REPOSITORY",
        "operationId" : "assignSoftwareModules",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleAssigment"
                }
              }
            },
            "application/hal+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleAssigment"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "409" : {
            "description" : "E.g. in case an entity is created or modified by another user in another request at the same time. You may retry your modification request.",
            "content" : {
              "application/json" : { }
            }
          },
          "415" : {
            "description" : "The request was attempt with a media-type which is not supported by the server for this resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/userinfo" : {
      "get" : {
        "tags" : [ "Basic Authentication" ],
        "operationId" : "validateBasicAuth",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtUserInfo"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtUserInfo"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/installedDS" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return installed distribution set of a specific target",
        "description" : "Handles the GET request of retrieving the installed distribution set of an specific target. Required Permission: READ_TARGET",
        "operationId" : "getInstalledDistributionSet",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSet"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/autoConfirm" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return the current auto-confitm state for a specific target",
        "description" : "Handles the GET request to check the current auto-confirmation state of a target. Required Permission: READ_TARGET",
        "operationId" : "getAutoConfirmStatus",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAutoConfirm"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAutoConfirm"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/attributes" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return attributes of a specific target",
        "description" : "Handles the GET request of retrieving the attributes of a specific target. Reponse is a key/value list. Required Permission: READ_TARGET",
        "operationId" : "getAttributes",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAttributes"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtTargetAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/actions" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return actions for a specific target",
        "description" : "Handles the GET request of retrieving the full action history of a specific target. Required Permission: READ_TARGET",
        "operationId" : "getActionHistory",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtAction"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtAction"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targets/{targetId}/actions/{actionId}/status" : {
      "get" : {
        "tags" : [ "Targets" ],
        "summary" : "Return status of a specific action on a specific target",
        "description" : "Handles the GET request of retrieving a specific action on a specific target. Required Permission: READ_TARGET",
        "operationId" : "getActionStatusList",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtActionStatus"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtActionStatus"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/softwaremodules/{softwareModuleId}/artifacts/{artifactId}" : {
      "get" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Return single Artifact meta data",
        "description" : "Handles the GET request of retrieving a single Artifact meta data request. Required Permission: READ_REPOSITORY",
        "operationId" : "getArtifact",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "useartifacturlhandler",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtArtifact"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtArtifact"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Software Modules" ],
        "summary" : "Delete artifact by Id",
        "description" : "Handles the DELETE request for a single Artifact assigned to a SoftwareModule. Required Permission: DELETE_REPOSITORY",
        "operationId" : "deleteArtifact",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Software Module not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/softwaremodules/{softwareModuleId}/artifacts/{artifactId}/download" : {
      "get" : {
        "tags" : [ "Download artifact" ],
        "operationId" : "downloadArtifact_1",
        "parameters" : [ {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}" : {
      "get" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Return single Rollout",
        "description" : "Handles the GET request of retrieving a single rollout. Required Permission: READ_ROLLOUT",
        "operationId" : "getRollout",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Rollout not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Delete a Rollout",
        "description" : "Handles the DELETE request of deleting a rollout. Required Permission: DELETE_ROLLOUT",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Rollout not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/deploygroups" : {
      "get" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Return all rollout groups referred to a Rollout",
        "description" : "Handles the GET request of retrieving all deploy groups of a specific rollout. Required Permission: READ_ROLLOUT",
        "operationId" : "getRolloutGroups",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "representation",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "compact"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Rollout not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtRolloutGroupResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtRolloutGroupResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/deploygroups/{groupId}" : {
      "get" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Return single rollout group",
        "description" : "Handles the GET request of a single deploy group of a specific rollout. Required Permission: READ_ROLLOUT",
        "operationId" : "getRolloutGroup",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Rollout not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutGroupResponseBody"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtRolloutGroupResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/rollouts/{rolloutId}/deploygroups/{groupId}/targets" : {
      "get" : {
        "tags" : [ "Rollouts" ],
        "summary" : "Return all targets related to a specific rollout group",
        "description" : "Handles the GET request of retrieving all targets of a single deploy group of a specific rollout. Required Permissions: READ_ROLLOUT, READ_TARGET.",
        "operationId" : "getRolloutGroupTargets",
        "parameters" : [ {
          "name" : "rolloutId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Rollout not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsettypes/{distributionSetTypeId}/optionalmoduletypes/{softwareModuleTypeId}" : {
      "get" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Return single optional Software Module Type in a Distribution Set Type",
        "description" : "Handles the GET request of retrieving the single optional software module type in that distribution set type. Required Permission: READ_REPOSITORY",
        "operationId" : "getOptionalModule",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Delete an optional module from a Distribution Set Type",
        "description" : "Handles DELETE request for removing an optional module from the distribution set type. Note that a DS type cannot be changed after it has been used by a DS. Required Permission: UPDATE_REPOSITORY and READ_REPOSITORY",
        "operationId" : "removeOptionalModule",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsettypes/{distributionSetTypeId}/mandatorymoduletypes/{softwareModuleTypeId}" : {
      "get" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Return single mandatory Software Module Type in a Distribution Set Type",
        "description" : "Handles the GET request of retrieving the single mandatory software module type in that distribution set type. Required Permission: READ_REPOSITORY",
        "operationId" : "getMandatoryModule",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Distribution Set Types" ],
        "summary" : "Delete a mandatory module from a Distribution Set Type",
        "description" : "Handles the DELETE request for removing a software module type from a single distribution set type. Required Permission: DELETE_REPOSITORY",
        "operationId" : "removeMandatoryModule",
        "parameters" : [ {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "softwareModuleTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Type not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/statistics" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return Rollouts, Actions and Auto Assignments counts by Status for Distribution Set",
        "description" : "Handles the GET request of retrieving Rollouts, Actions and Auto Assignments counts by Status for Distribution Set",
        "operationId" : "getStatisticsForDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/statistics/rollouts" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return Rollouts count by status for Distribution Set",
        "description" : "Handles the GET request of retrieving Rollouts count by Status for Distribution Set",
        "operationId" : "getRolloutsCountByStatusForDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/statistics/autoassignments" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return Auto Assignments count for Distribution Set",
        "description" : "Handles the GET request of retrieving Auto Assignments count for Distribution Set",
        "operationId" : "getAutoAssignmentsCountForDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/statistics/actions" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return Actions count by status for Distribution Set",
        "description" : "Handles the GET request of retrieving Actions count by Status for Distribution Set",
        "operationId" : "getActionsCountByStatusForDistributionSet",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtDistributionSetStatistics"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/installedTargets" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return installed targets to a specific distribution set",
        "description" : "Handles the GET request for retrieving installed targets of a single distribution set. Required permissions: READ_REPOSITORY and READ_TARGET",
        "operationId" : "getInstalledTargets",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTarget"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/autoAssignTargetFilters" : {
      "get" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Return target filter queries that have the given distribution set as auto assign DS",
        "description" : "Handles the GET request for retrieving assigned target filter queries of a single distribution set. Required permissions: READ_REPOSITORY and READ_TARGET",
        "operationId" : "getAutoAssignTargetFilterQueries",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTargetFilterQuery"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtTargetFilterQuery"
                }
              }
            }
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/rest/v1/actions" : {
      "get" : {
        "tags" : [ "Actions" ],
        "summary" : "Return all actions",
        "description" : "Handles the GET request of retrieving all actions.",
        "operationId" : "getActions",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "representation",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "compact"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtAction"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedListMgmtAction"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/actions/{actionId}" : {
      "get" : {
        "tags" : [ "Actions" ],
        "summary" : "Return action by id",
        "description" : "Handles the GET request of retrieving a single action by actionId.",
        "operationId" : "getAction_1",
        "parameters" : [ {
          "name" : "actionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtAction"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MgmtAction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/downloadserver/downloadId/{tenant}/{downloadId}" : {
      "get" : {
        "tags" : [ "Download artifact by ID" ],
        "operationId" : "downloadArtifactByDownloadId",
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "downloadId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v1/targettypes/{targetTypeId}/compatibledistributionsettypes/{distributionSetTypeId}" : {
      "delete" : {
        "tags" : [ "Target Types" ],
        "summary" : "Remove compatibility of distribution set type from the target type",
        "description" : "Handles the DELETE request for removing a distribution set type from a single target type. Required Permission: UPDATE_TARGET and READ_REPOSITORY",
        "operationId" : "removeCompatibleDistributionSet",
        "parameters" : [ {
          "name" : "targetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "distributionSetTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution set type was not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/targettags/{targetTagId}/assigned/{controllerId}" : {
      "delete" : {
        "tags" : [ "Target Tags" ],
        "summary" : "Unassign target from a given tagId",
        "description" : "Handles the DELETE request to unassign the given target.",
        "operationId" : "unassignTarget",
        "parameters" : [ {
          "name" : "targetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "controllerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies."
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second."
          },
          "404" : {
            "description" : "Target not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "The request requires user authentication."
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json."
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource."
          }
        }
      }
    },
    "/rest/v1/distributionsettags/{distributionsetTagId}/assigned/{distributionsetId}" : {
      "delete" : {
        "tags" : [ "Distribution Set Tags" ],
        "summary" : "Unassign one distribution set from the given tag id",
        "description" : "Handles the DELETE request of unassign the given distribution.",
        "operationId" : "unassignDistributionSet",
        "parameters" : [ {
          "name" : "distributionsetTagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "distributionsetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "404" : {
            "description" : "Distribution Set Tag not found.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          }
        }
      }
    },
    "/rest/v1/distributionsets/{distributionSetId}/assignedSM/{softwareModuleId}" : {
      "delete" : {
        "tags" : [ "Distribution Sets" ],
        "summary" : "Delete the assignment of the software module from the distribution set",
        "description" : "Delete an assignment. Required permission: UPDATE_REPOSITORY",
        "operationId" : "deleteAssignSoftwareModules",
        "parameters" : [ {
          "name" : "distributionSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "softwareModuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "403" : {
            "description" : "Insufficient permissions, entity is not allowed to be changed (i.e. read-only) or data volume restriction applies.",
            "content" : {
              "application/json" : { }
            }
          },
          "401" : {
            "description" : "The request requires user authentication.",
            "content" : {
              "application/json" : { }
            }
          },
          "405" : {
            "description" : "The http request method is not allowed on the resource.",
            "content" : {
              "application/json" : { }
            }
          },
          "429" : {
            "description" : "Too many requests. The server will refuse further attempts and the client has to wait another second.",
            "content" : {
              "application/json" : { }
            }
          },
          "400" : {
            "description" : "Bad Request - e.g. invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExceptionInfo"
                }
              }
            }
          },
          "406" : {
            "description" : "In case accept header is specified and not application/json.",
            "content" : {
              "application/json" : { }
            }
          },
          "200" : {
            "description" : "Successfully retrieved"
          },
          "404" : {
            "description" : "Distribution Set not found.",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ExceptionInfo" : {
        "type" : "object",
        "properties" : {
          "exceptionClass" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "MgmtTargetTypeRequestBodyPut" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "updatedTypeName"
          },
          "description" : {
            "type" : "string",
            "example" : "an updated description"
          },
          "colour" : {
            "type" : "string",
            "example" : "#aaafff"
          }
        }
      },
      "Links" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/Link"
        }
      },
      "MgmtTargetType" : {
        "required" : [ "id", "key", "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "key" : {
            "type" : "string",
            "example" : "id.t23"
          },
          "colour" : {
            "type" : "string",
            "example" : "brown"
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 26
          }
        }
      },
      "MgmtTagRequestBodyPut" : {
        "type" : "object",
        "properties" : {
          "colour" : {
            "type" : "string",
            "example" : "rgb(0,255,0)"
          },
          "name" : {
            "type" : "string",
            "example" : "Example name"
          },
          "description" : {
            "type" : "string",
            "example" : "Example description"
          }
        }
      },
      "MgmtTag" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "colour" : {
            "type" : "string",
            "example" : "rgb(255,0,0)"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 2
          }
        }
      },
      "MgmtTargetRequestBody" : {
        "required" : [ "controllerId", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "controllerName"
          },
          "description" : {
            "type" : "string",
            "example" : "Example description of a target"
          },
          "controllerId" : {
            "type" : "string",
            "example" : "12345"
          },
          "address" : {
            "type" : "string",
            "example" : "https://192.168.0.1"
          },
          "securityToken" : {
            "type" : "string",
            "example" : "2345678DGGDGFTDzztgf"
          },
          "requestAttributes" : {
            "type" : "boolean",
            "example" : false
          },
          "targetType" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          }
        }
      },
      "MgmtPollStatus" : {
        "type" : "object",
        "properties" : {
          "lastRequestAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065941102
          },
          "nextExpectedRequestAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691109141102
          },
          "overdue" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MgmtTarget" : {
        "required" : [ "controllerId", "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "controllerId" : {
            "type" : "string",
            "example" : "123"
          },
          "updateStatus" : {
            "type" : "string",
            "example" : "in_sync"
          },
          "lastControllerRequestAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065941102
          },
          "installedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065941155
          },
          "ipAddress" : {
            "type" : "string",
            "example" : "192.168.0.1"
          },
          "address" : {
            "type" : "string",
            "example" : "http://192.168.0.1"
          },
          "pollStatus" : {
            "$ref" : "#/components/schemas/MgmtPollStatus"
          },
          "securityToken" : {
            "type" : "string",
            "example" : "38e6a19932b014040ba061795186514e"
          },
          "requestAttributes" : {
            "type" : "boolean",
            "example" : true
          },
          "targetType" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 19
          },
          "targetTypeName" : {
            "type" : "string",
            "example" : "defaultType"
          },
          "autoConfirmActive" : {
            "type" : "boolean",
            "example" : false
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtMetadataBodyPut" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "example" : "someValue"
          }
        }
      },
      "MgmtMetadata" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "example" : "someKnownKey"
          },
          "value" : {
            "type" : "string",
            "example" : "someKnownKeyValue"
          }
        }
      },
      "MgmtActionRequestBodyPut" : {
        "type" : "object",
        "properties" : {
          "forceType" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          }
        }
      },
      "MgmtAction" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "type" : {
            "type" : "string",
            "example" : "update"
          },
          "status" : {
            "type" : "string",
            "example" : "finished"
          },
          "detailStatus" : {
            "type" : "string",
            "example" : "finished"
          },
          "forceTime" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065903238
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 600
          },
          "rollout" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "rolloutName" : {
            "type" : "string",
            "example" : "rollout"
          },
          "lastStatusCode" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 200
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 7
          },
          "forceType" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          }
        }
      },
      "MgmtTargetFilterQueryRequestBody" : {
        "required" : [ "name", "query" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "filterName"
          },
          "query" : {
            "type" : "string",
            "example" : "controllerId==example-target-*"
          }
        }
      },
      "MgmtTargetFilterQuery" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "filterName"
          },
          "query" : {
            "type" : "string",
            "example" : "name==*"
          },
          "autoAssignDistributionSet" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 15
          },
          "autoAssignActionType" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          },
          "autoAssignWeight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "confirmationRequired" : {
            "type" : "boolean",
            "example" : false
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 2
          }
        }
      },
      "MgmtSystemTenantConfigurationValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object",
            "example" : true
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1623085150
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "example user"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1523085150
          },
          "createdBy" : {
            "type" : "string",
            "example" : "example user"
          },
          "global" : {
            "type" : "boolean"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtSystemTenantConfigurationValueRequest" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object",
            "example" : "exampleToken"
          }
        }
      },
      "MgmtSoftwareModuleTypeRequestBodyPut" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Example description"
          },
          "colour" : {
            "type" : "string",
            "example" : "rgb(0,0,255"
          }
        }
      },
      "MgmtSoftwareModuleType" : {
        "required" : [ "id", "key", "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "key" : {
            "type" : "string",
            "example" : "id.t23"
          },
          "colour" : {
            "type" : "string",
            "example" : "brown"
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "maxAssignments" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 83
          }
        }
      },
      "MgmtSoftwareModuleRequestBodyPut" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "SM Description"
          },
          "vendor" : {
            "type" : "string",
            "example" : "SM Vendor Name"
          }
        }
      },
      "MgmtSoftwareModule" : {
        "required" : [ "id", "name", "type", "version" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "version" : {
            "type" : "string",
            "example" : "1.0.0"
          },
          "type" : {
            "type" : "string",
            "example" : "os"
          },
          "typeName" : {
            "type" : "string",
            "example" : "OS"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Vendor Limited, California"
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "encrypted" : {
            "type" : "boolean",
            "example" : false
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 6
          }
        }
      },
      "MgmtSoftwareModuleMetadataBodyPut" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "example" : "newValue"
          },
          "targetVisible" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "MgmtSoftwareModuleMetadata" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "example" : "someKnownKey"
          },
          "value" : {
            "type" : "string",
            "example" : "someKnownValue"
          },
          "targetVisible" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MgmtDistributionSetTypeRequestBodyPut" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Example description"
          },
          "colour" : {
            "type" : "string",
            "example" : "rgb(86,37,99)"
          }
        }
      },
      "MgmtDistributionSetType" : {
        "required" : [ "id", "key", "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "key" : {
            "type" : "string",
            "example" : "id.t23"
          },
          "colour" : {
            "type" : "string",
            "example" : "brown"
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 99
          }
        }
      },
      "MgmtDistributionSetRequestBodyPut" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "dsOne"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of the distribution set."
          },
          "version" : {
            "type" : "string",
            "example" : "1.0.0"
          },
          "requiredMigrationStep" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MgmtDistributionSet" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "version" : {
            "type" : "string",
            "example" : "1.4.2"
          },
          "modules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModule"
            }
          },
          "requiredMigrationStep" : {
            "type" : "boolean",
            "example" : false
          },
          "type" : {
            "type" : "string",
            "example" : "test_default_ds_type"
          },
          "typeName" : {
            "type" : "string",
            "example" : "OS (FW) mandatory, runtime (FW) and app (SW) optional"
          },
          "complete" : {
            "type" : "boolean",
            "example" : true
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "valid" : {
            "type" : "boolean",
            "example" : true
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 51
          }
        }
      },
      "MgmtDistributionSetTypeAssignment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 108
          }
        }
      },
      "MgmtTargetTypeRequestBodyPost" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "updatedTypeName"
          },
          "description" : {
            "type" : "string",
            "example" : "an updated description"
          },
          "colour" : {
            "type" : "string",
            "example" : "#aaafff"
          },
          "key" : {
            "type" : "string",
            "example" : "id.t23"
          },
          "compatibledistributionsettypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtDistributionSetTypeAssignment"
            }
          },
          "compatibleDsTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtDistributionSetTypeAssignment"
            }
          }
        }
      },
      "MgmtAssignedTargetRequestBody" : {
        "required" : [ "controllerId" ],
        "type" : "object",
        "properties" : {
          "controllerId" : {
            "type" : "string",
            "example" : "Target1"
          }
        }
      },
      "MgmtTargetTagAssigmentResult" : {
        "type" : "object",
        "properties" : {
          "assignedTargets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtTarget"
            }
          },
          "unassignedTargets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtTarget"
            }
          }
        }
      },
      "MgmtId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 108
          }
        }
      },
      "MgmtTargetAutoConfirmUpdate" : {
        "type" : "object",
        "properties" : {
          "initiator" : {
            "type" : "string",
            "example" : "custom_initiator_value"
          },
          "remark" : {
            "type" : "string",
            "example" : "custom_remark"
          }
        }
      },
      "MgmtDistributionSetAssignment" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 108
          },
          "forcetime" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065930359
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 23
          },
          "confirmationRequired" : {
            "type" : "boolean",
            "example" : false
          },
          "type" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          },
          "maintenanceWindow" : {
            "$ref" : "#/components/schemas/MgmtMaintenanceWindowRequestBody"
          }
        }
      },
      "MgmtDistributionSetAssignments" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/MgmtDistributionSetAssignment"
        }
      },
      "MgmtMaintenanceWindowRequestBody" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "type" : "string",
            "example" : "10 12 14 3 8 ? 2023"
          },
          "duration" : {
            "type" : "string",
            "example" : "00:10:00"
          },
          "timezone" : {
            "type" : "string",
            "example" : "+00:00"
          }
        }
      },
      "MgmtActionId" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "MgmtTargetAssignmentResponseBody" : {
        "type" : "object",
        "properties" : {
          "alreadyAssigned" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assignedActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtActionId"
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "assigned" : {
            "type" : "integer",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MgmtDistributionSetAutoAssignment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 108
          },
          "type" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "confirmationRequired" : {
            "type" : "boolean"
          }
        }
      },
      "MgmtSoftwareModuleTypeRequestBodyPost" : {
        "required" : [ "key", "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Example description"
          },
          "colour" : {
            "type" : "string",
            "example" : "rgb(0,0,255"
          },
          "name" : {
            "type" : "string",
            "example" : "Example name"
          },
          "key" : {
            "type" : "string",
            "example" : "Example key"
          },
          "maxAssignments" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          }
        }
      },
      "MgmtSoftwareModuleRequestBodyPost" : {
        "required" : [ "name", "type", "version" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "SM Name"
          },
          "version" : {
            "type" : "string",
            "example" : "1.0.0"
          },
          "type" : {
            "type" : "string",
            "example" : "os"
          },
          "description" : {
            "type" : "string",
            "example" : "SM Description"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Vendor Limited, California"
          },
          "encrypted" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MgmtArtifact" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "hashes" : {
            "$ref" : "#/components/schemas/MgmtArtifactHash"
          },
          "providedFilename" : {
            "type" : "string",
            "example" : "file1"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 3
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 3
          }
        }
      },
      "MgmtArtifactHash" : {
        "type" : "object",
        "properties" : {
          "sha1" : {
            "type" : "string",
            "example" : "2d86c2a659e364e9abba49ea6ffcd53dd5559f05"
          },
          "md5" : {
            "type" : "string",
            "example" : "0d1b08c34858921bc7c662b228acb7ba"
          },
          "sha256" : {
            "type" : "string",
            "example" : "a03b221c6c6eae7122ca51695d456d5222e524889136394944b2f9763b483615"
          }
        }
      },
      "MgmtRolloutCondition" : {
        "type" : "object",
        "properties" : {
          "condition" : {
            "type" : "string",
            "enum" : [ "THRESHOLD" ]
          },
          "expression" : {
            "type" : "string",
            "example" : "50"
          }
        }
      },
      "MgmtRolloutErrorAction" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "PAUSE" ]
          },
          "expression" : {
            "type" : "string",
            "example" : "80"
          }
        }
      },
      "MgmtRolloutGroup" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "successCondition" : {
            "$ref" : "#/components/schemas/MgmtRolloutCondition"
          },
          "successAction" : {
            "$ref" : "#/components/schemas/MgmtRolloutSuccessAction"
          },
          "errorCondition" : {
            "$ref" : "#/components/schemas/MgmtRolloutCondition"
          },
          "errorAction" : {
            "$ref" : "#/components/schemas/MgmtRolloutErrorAction"
          },
          "targetFilterQuery" : {
            "type" : "string",
            "example" : "controllerId==exampleTarget*"
          },
          "targetPercentage" : {
            "type" : "number",
            "format" : "float",
            "example" : 20.0
          },
          "confirmationRequired" : {
            "type" : "boolean",
            "example" : false
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtRolloutRestRequestBody" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "successCondition" : {
            "$ref" : "#/components/schemas/MgmtRolloutCondition"
          },
          "successAction" : {
            "$ref" : "#/components/schemas/MgmtRolloutSuccessAction"
          },
          "errorCondition" : {
            "$ref" : "#/components/schemas/MgmtRolloutCondition"
          },
          "errorAction" : {
            "$ref" : "#/components/schemas/MgmtRolloutErrorAction"
          },
          "targetFilterQuery" : {
            "type" : "string",
            "example" : "id==targets-*"
          },
          "distributionSetId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 6
          },
          "amountGroups" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 5
          },
          "forcetime" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065781929
          },
          "startAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065780929
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 400
          },
          "confirmationRequired" : {
            "type" : "boolean",
            "example" : false
          },
          "type" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtRolloutGroup"
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtRolloutSuccessAction" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "NEXTGROUP" ]
          },
          "expression" : {
            "type" : "string"
          }
        }
      },
      "MgmtRolloutResponseBody" : {
        "required" : [ "id", "name", "status", "totalTargets" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "targetFilterQuery" : {
            "type" : "string",
            "example" : "controllerId==exampleTarget*"
          },
          "distributionSetId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 2
          },
          "status" : {
            "type" : "string",
            "example" : "ready"
          },
          "totalTargets" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 20
          },
          "totalTargetsPerStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "totalGroups" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 5
          },
          "startAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065753136
          },
          "forcetime" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065762496
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          },
          "type" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 400
          },
          "approvalRemark" : {
            "type" : "string",
            "example" : "Approved remark."
          },
          "approveDecidedBy" : {
            "type" : "string",
            "example" : "exampleUsername"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 2
          }
        }
      },
      "MgmtDistributionSetTypeRequestBodyPost" : {
        "required" : [ "key", "name" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "Example description"
          },
          "colour" : {
            "type" : "string",
            "example" : "rgb(86,37,99)"
          },
          "name" : {
            "type" : "string",
            "example" : "Example type name"
          },
          "key" : {
            "type" : "string",
            "example" : "Example key"
          },
          "mandatorymodules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModuleTypeAssigment"
            }
          },
          "optionalmodules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModuleTypeAssigment"
            }
          }
        }
      },
      "MgmtSoftwareModuleTypeAssigment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 108
          }
        }
      },
      "MgmtAssignedDistributionSetRequestBody" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 24
          }
        }
      },
      "MgmtDistributionSetTagAssigmentResult" : {
        "type" : "object",
        "properties" : {
          "assignedDistributionSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtDistributionSet"
            }
          },
          "unassignedDistributionSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtDistributionSet"
            }
          }
        }
      },
      "MgmtDistributionSetRequestBodyPost" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "dsOne"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of the distribution set."
          },
          "version" : {
            "type" : "string",
            "example" : "1.0.0"
          },
          "requiredMigrationStep" : {
            "type" : "boolean",
            "example" : false
          },
          "modules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModuleAssigment"
            }
          },
          "type" : {
            "type" : "string",
            "example" : "test_default_ds_type"
          }
        }
      },
      "MgmtSoftwareModuleAssigment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 108
          }
        }
      },
      "MgmtInvalidateDistributionSetRequestBody" : {
        "required" : [ "actionCancelationType" ],
        "type" : "object",
        "properties" : {
          "actionCancelationType" : {
            "type" : "string",
            "enum" : [ "soft", "force", "none" ]
          },
          "cancelRollouts" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "MgmtTargetAssignmentRequestBody" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "forcetime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "soft", "forced", "timeforced", "downloadonly" ]
          },
          "maintenanceWindow" : {
            "$ref" : "#/components/schemas/MgmtMaintenanceWindowRequestBody"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "confirmationRequired" : {
            "type" : "boolean"
          }
        }
      },
      "MgmtUserInfo" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "tenant" : {
            "type" : "string"
          }
        }
      },
      "PagedListMgmtTargetType" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtTargetType"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtTag" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtTag"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtTarget" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtTarget"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtMetadata" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtMetadata"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtTargetAutoConfirm" : {
        "required" : [ "active" ],
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "example" : true
          },
          "initiator" : {
            "type" : "string",
            "example" : "custom_initiator_value"
          },
          "remark" : {
            "type" : "string",
            "example" : "custom_remark"
          },
          "activatedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065938576
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtTargetAttributes" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "PagedListMgmtAction" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtAction"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtActionStatus" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "running"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "reportedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065929524
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 200
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 21
          }
        }
      },
      "PagedListMgmtActionStatus" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtActionStatus"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtTargetFilterQuery" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtTargetFilterQuery"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtSoftwareModuleType" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModuleType"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtSoftwareModule" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModule"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtSoftwareModuleMetadata" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtSoftwareModuleMetadata"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtRolloutResponseBody" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtRolloutResponseBody"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtRolloutGroupResponseBody" : {
        "required" : [ "id", "name", "status" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065905897
          },
          "lastModifiedBy" : {
            "type" : "string",
            "example" : "bumlux"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1691065906407
          },
          "name" : {
            "type" : "string",
            "example" : "Name of entity"
          },
          "description" : {
            "type" : "string",
            "example" : "Description of entity"
          },
          "successCondition" : {
            "$ref" : "#/components/schemas/MgmtRolloutCondition"
          },
          "successAction" : {
            "$ref" : "#/components/schemas/MgmtRolloutSuccessAction"
          },
          "errorCondition" : {
            "$ref" : "#/components/schemas/MgmtRolloutCondition"
          },
          "errorAction" : {
            "$ref" : "#/components/schemas/MgmtRolloutErrorAction"
          },
          "targetFilterQuery" : {
            "type" : "string",
            "example" : "controllerId==exampleTarget*"
          },
          "targetPercentage" : {
            "type" : "number",
            "format" : "float",
            "example" : 20.0
          },
          "confirmationRequired" : {
            "type" : "boolean",
            "example" : false
          },
          "status" : {
            "type" : "string",
            "example" : "ready"
          },
          "totalTargets" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 4
          },
          "totalTargetsPerStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 63
          }
        }
      },
      "PagedListMgmtRolloutGroupResponseBody" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtRolloutGroupResponseBody"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtDistributionSetType" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtDistributionSetType"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedListMgmtDistributionSet" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MgmtDistributionSet"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "MgmtDistributionSetStatistics" : {
        "type" : "object",
        "properties" : {
          "totalAutoAssignments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "actions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "rollouts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "hreflang" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "deprecation" : {
            "type" : "string"
          },
          "profile" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "templated" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}